version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: gaming_platform_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-gaming_platform}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      # Initialization scripts (run on first start)
      - ./sql/init:/docker-entrypoint-initdb.d:ro
      # Custom PostgreSQL configuration (optional)
      - ./docker/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:ro
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - gaming_platform_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-gaming_platform}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: 
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
  pgbouncer:
    image: edoburu/pgbouncer:latest
    container_name: gaming_platform_pgbouncer
    environment:
      DATABASE_URL: postgres://postgres:changeme@postgres:5432/gaming_platform
      POOL_MODE: transaction
      MAX_CLIENT_CONN: 1000
      DEFAULT_POOL_SIZE: 25
    ports:
      - "6432:5432"
    depends_on:
      - postgres
    networks:
      - gaming_platform_network
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: gaming_platform_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      # Persistent pgAdmin settings
      - pgadmin_data:/var/lib/pgadmin
      # Pre-configured server connection (optional)
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json:ro
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - gaming_platform_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  gaming_platform_network:
    driver: bridge